'use client'
// import type { Metadata } from "next";
import "./globals.css";
import { signOut, useSession } from "next-auth/react";

import AuthProvider from "@/provider/AuthProvider";
import Navbar from "@/components/navbar";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Button } from "@/components/ui/button"
import { Sheet, SheetContent, SheetTrigger } from "@/components/ui/sheet"
import { useEffect, useState } from "react";
import { Clock, Menu } from "lucide-react";
import Link from "next/link";
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };
import { BarChart3, Calendar, FileText, Home, LogOut, Settings, Users } from "lucide-react"
import { usePathname } from "next/navigation";
import { UserAvatarMenu } from "@/components/user-avatar-menu";
import Image from "next/image";
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  
  const pathname = usePathname();
  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false)
  return (
    <AuthProvider>
      <html lang="en">
        <body
        >
          <div className="flex min-h-screen flex-col">

            <header className="sticky flex items-center justify-between px-10   top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
              <div className="flex h-16 items-center justify-between">
                <Link href={"/"} className="flex items-center gap-2">
                  <Image
                    src="/logo2.JPG"
                    alt="INFARMA"
                    width={150}
                    height={40}
                    className="h-10 w-auto mix-blend-multiply"
                  />
                </Link>
                {
                  "/" === pathname &&
                  <div className="flex items-center gap-2 container justify-between w-full">
                    <nav className="hidden md:flex items-center gap-6">
                      <Link href="#" className="text-sm font-medium transition-colors hover:text-primary">
                        Productos
                      </Link>
                      <Link href="#" className="text-sm font-medium transition-colors hover:text-primary">
                        Nosotros
                      </Link>
                      <Link href="#" className="text-sm font-medium transition-colors hover:text-primary">
                        Contacto
                      </Link>
                      <Link href="#" className="text-sm font-medium transition-colors hover:text-primary">
                        FAQ
                      </Link>
                      <Link href="#" className="text-sm font-medium transition-colors hover:text-primary">
                        Nuestros Valores
                      </Link>
                    </nav>
                      <Link href="/login" className="hidden md:flex">
                        Iniciar sesión
                      </Link>
                  </div>
                }
              </div>
              {
                ("/" !== pathname ? "/login" !== pathname : false) &&
                <div className="ml-auto flex  h-full justify-center items-center gap-4">
                  <UserAvatarMenu name="Carlos Rodríguez" role="Supervisor de Recursos Humanos" />
                </div>

              }
            </header>

            <div className={"/" === pathname ? "" : "flex flex-1"}>
              {
                ("/" !== pathname ? "/login" !== pathname : false) &&
                <aside className="hidden w-64 border-r bg-muted/40 md:block">
                  <DesktopSidebar />
                </aside>

              }
              {
                "/" === pathname ?
                  <main>{children}</main> :
                  <main className="flex-1 p-4 md:p-6">{children}</main>

              }
            </div>

          </div>
        </body>
      </html>
    </AuthProvider>
  );
}
function MobileSidebar() {
  return (
    <div className="flex h-full flex-col bg-muted/40">
      <div className="flex h-16 items-center gap-2 border-b px-6">
        <Clock className="h-6 w-6" />
        <span className="text-lg font-semibold">AsistenciaLaboral</span>
      </div>
      <div className="flex-1 overflow-auto py-2">
        <nav className="grid items-start px-2 text-sm font-medium">
          <SidebarItems />
        </nav>
      </div>
    </div>
  )
}

function DesktopSidebar() {
  return (
    <div className="flex h-full flex-col gap-2">
      <div className="px-2 py-4">
        <nav className="grid items-start gap-1 text-sm font-medium">
          <SidebarItems />
        </nav>
      </div>
    </div>
  )
}


function SidebarItems() {
  const pathname = usePathname();

  const handleLogout = () =>{
    signOut();
    
  }
  const routes = [
    {
      path: "/page/profile",
      icon: Clock,
      text: "Asistencia"
    },
    {
      path: "/page/admin",
      icon: Home,
      text: "Adnministración"
    },
    {
      path: "/page/applications",
      icon: FileText,
      text: "Solicitudes"
    },
    {
      path: "/page/vacations-permits",
      icon: Calendar,
      text: "Permisos"
    },
    {
      path: "/page/dashboard",
      icon: Users,
      text: "Estadisticas"
    },
    /* 
    {
      path: "#",
      icon: Settings,
      text: "Configuración"
    },
    */
    {
      path: "#",
      icon: LogOut,
      text: "Cerrar sesión"
    },
  ]
  const selectedValue = "flex items-center gap-3 rounded-lg bg-primary/10 px-3 py-2 text-primary transition-all"
  const unselectedValue = "flex items-center gap-3 rounded-lg px-3 py-2 text-muted-foreground transition-all hover:text-primary"
  return (
    <>
    {routes.map((route, index) => (
      <Link
        href={route.path}
        className={pathname === route.path ? selectedValue : unselectedValue}
        key={index}
        {...(route.text === "Cerrar sesión" ? { onClick: () => handleLogout() } : {})}
      >
        <route.icon className="h-4 w-4" />
        {route.text}
      </Link>
    ))}
  </>
  )
}